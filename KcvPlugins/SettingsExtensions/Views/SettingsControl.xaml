<UserControl x:Class="AMing.SettingsExtensions.Views.SettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
			 xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:amingdata="clr-namespace:AMing.SettingsExtensions.Data"
             xmlns:controls="clr-namespace:AMing.SettingsExtensions.Controls"
			 xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
			 xmlns:metro2="clr-namespace:Grabacr07.Desktop.Metro.Controls;assembly=Desktop.Metro"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="400" >
    <UserControl.Resources>
        <DataTemplate x:Key="WindowViewType_Icon_Bottom">
            <Path Style="{DynamicResource WindowViewType_Icon_Path}" 
                  Data="M3.083,7.333v16.334h24.833V7.333H3.083zM24.915,16.833H6.083v-6.501h18.833L24.915,16.833L24.915,16.833z"/>
        </DataTemplate>
        <DataTemplate x:Key="WindowViewType_Icon_Top">
            <Path Style="{DynamicResource WindowViewType_Icon_Path}" 
                  Data="M27.916,23.667V7.333H3.083v16.334H27.916zM24.915,20.668H6.083v-6.501h18.833L24.915,20.668L24.915,20.668z"/>
        </DataTemplate>
        <DataTemplate x:Key="WindowViewType_Icon_Left">
            <Path Style="{DynamicResource WindowViewType_Icon_Path}"  
                  Data="M3.084,7.333v16.334h24.832V7.333H3.084z M11.667,10.332h13.251v10.336H11.667V10.332z"/>
        </DataTemplate>
        <DataTemplate x:Key="WindowViewType_Icon_Right">
            <Path Style="{DynamicResource WindowViewType_Icon_Path}"
                  Data="M3.083,7.333v16.334h24.833V7.333H3.083z M19.333,20.668H6.083V10.332h13.25V20.668z"/>
        </DataTemplate>
        <DataTemplate x:Key="WindowViewType_Icon_Split">
            <Path Style="{DynamicResource WindowViewType_Icon_Path}"
                  Data="M5.896,5.333V21.25h23.417V5.333H5.896zM26.312,18.25H8.896V8.334h17.417V18.25L26.312,18.25zM4.896,9.542H1.687v15.917h23.417V22.25H4.896V9.542z"/>
        </DataTemplate>
        <DataTemplate x:Key="WindowViewType_Icon_Tabs">
            <Path Style="{DynamicResource WindowViewType_Icon_Path}"
                  Data="M1.999,2.332v26.499H28.5V2.332H1.999zM26.499,26.832H4V12.5h8.167V4.332h14.332V26.832zM15.631,17.649l5.468,5.469l-1.208,1.206l5.482,1.469l-1.47-5.481l-1.195,1.195l-5.467-5.466l1.209-1.208l-5.482-1.469l1.468,5.48L15.631,17.649z"/>
        </DataTemplate>

        
        <DataTemplate x:Key="WindowViewType_Item">
            <Grid Margin="0,3">
                <ContentControl Width="50" Height="50" Content="{Binding Type}">
                    <ContentControl.ContentTemplateSelector>
                        <controls:WindowViewTypeDataTemplateSelector
                             Bottom="{StaticResource WindowViewType_Icon_Bottom}"
                             Top="{StaticResource WindowViewType_Icon_Top}"
                             Left="{StaticResource WindowViewType_Icon_Left}"
                             Right="{StaticResource WindowViewType_Icon_Right}"
                             Split="{StaticResource WindowViewType_Icon_Split}"
                             Tabs="{StaticResource WindowViewType_Icon_Tabs}"
                            />
                    </ContentControl.ContentTemplateSelector>
                </ContentControl>
                <Path Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}"
                    HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-4,-5,0" Width="20" Height="20"
                    Fill="#FF007ACC" Stroke="White" 
                    Data="M2.379,14.729 5.208,11.899 12.958,19.648 25.877,6.733 28.707,9.561 12.958,25.308z" Stretch="Uniform"  />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="Theme_Item">
            <Grid Margin="0,3">
                <Rectangle Width="50" Height="50">
                    <Rectangle.Fill>
                        <SolidColorBrush Color="{Binding BackgroundColor}"/>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBlock Text="{Binding Type}" 
                           Style="{DynamicResource HeaderTextStyleKey}" 
                           Margin="5"
                           FontSize="12"
                           HorizontalAlignment="Center" VerticalAlignment="Bottom" >
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{Binding ForegroundColor}"/>
                    </TextBlock.Foreground>
                </TextBlock>
                <Path Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}"
                    HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-4,-5,0" Width="20" Height="20"
                    Fill="#FF007ACC" Stroke="White" 
                    Data="M2.379,14.729 5.208,11.899 12.958,19.648 25.877,6.733 28.707,9.561 12.958,25.308z" Stretch="Uniform"  />
            </Grid>
        </DataTemplate>

        <ItemsPanelTemplate x:Key="ItemsPanel_Horizontal">
            <StackPanel Orientation="Horizontal"/>
        </ItemsPanelTemplate>

        <Style x:Key="ListBox_Theme" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Silver"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="ItemTemplate" Value="{DynamicResource Theme_Item}"/>
            <Setter Property="ItemsPanel" Value="{DynamicResource ItemsPanel_Horizontal}"/>
        </Style>

        <Style x:Key="WindowViewType_Icon_Path" TargetType="{x:Type Path}">
            <Setter Property="Fill" Value="#FF007ACC"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Stroke" Value="White"/>
            <Setter Property="Stretch" Value="Uniform"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <StackPanel Margin="10">
            <TextBlock Text="{Binding TextResource.Tool_Enable_ExitTip_Title, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				Style="{DynamicResource HeaderTextStyleKey}" />
            <CheckBox Margin="10" HorizontalAlignment="Left"
				Content="{Binding TextResource.Tool_Enable_ExitTip_CheckBox, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				IsChecked="{Binding EnableExitTip,Mode=TwoWay}"  />

            <Rectangle Height="1" Style="{DynamicResource SeparatorRectangleStyleKey}" Margin="0,5,0,20" />

            <TextBlock Text="{Binding TextResource.Tool_Enable_NotifyIcon_Title, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				Style="{DynamicResource HeaderTextStyleKey}" />
            <CheckBox Margin="10" HorizontalAlignment="Left"
				Content="{Binding TextResource.Tool_Enable_NotifyIcon_CheckBox, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				IsChecked="{Binding EnableNotifyIcon ,Mode=TwoWay}"  />

            <TextBlock Text="{Binding TextResource.Tool_Enable_WindowMiniHideTaskbar_Title, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				Style="{DynamicResource HeaderTextStyleKey}" />
            <CheckBox Margin="10" HorizontalAlignment="Left"
				Content="{Binding TextResource.Tool_Enable_WindowMiniHideTaskbar_CheckBox, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				IsChecked="{Binding EnableWindowMiniHideTaskbar ,Mode=TwoWay}"
                IsEnabled="{Binding EnableNotifyIcon}"/>

            <Rectangle Height="1" Style="{DynamicResource SeparatorRectangleStyleKey}" Margin="0,5,0,20" />

            <TextBlock Text="{Binding TextResource.Tool_Enable_Hotkey_Title, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				Style="{DynamicResource HeaderTextStyleKey}" />
            <CheckBox Margin="10" HorizontalAlignment="Left"
				Content="{Binding TextResource.Tool_Enable_Hotkey_CheckBox, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				IsChecked="{Binding EnableHotKeyShowHide ,Mode=TwoWay}"/>

            <TextBlock Text="{Binding TextResource.Tool_Hotkey_Set_Tip, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}" Margin="10,0,10,10"
				Style="{DynamicResource HeaderTextStyleKey}" />
            <StackPanel Orientation="Horizontal">
                <metro:PromptTextBox x:Name="txt_hotkey" Width="150" Margin="10,0" IsReadOnly="True"
                    Text="{Binding HotKey_KeyText}"
                    Prompt="{Binding TextResource.Tool_Hotkey_Set_Tip, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
                    IsEnabled="{Binding EnableHotKeyShowHide}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyDown">
                            <ei:CallMethodAction TargetObject="{Binding}" MethodName="HotKeyTextBoxKeyDown" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </metro:PromptTextBox>
                <metro2:CallMethodButton Content="{Binding TextResource.Tool_Hotkey_Set_Confirm, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}" 
                    MethodName="HotKeyConfirm"
                    IsEnabled="{Binding HotkeyIsChange}"/>
                <metro2:CallMethodButton Content="{Binding TextResource.Tool_Hotkey_Set_Reset, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}" Margin="10,0"
                    MethodName="HotKeyReset"  
                    IsEnabled="{Binding HotkeyIsChange}"/>
            </StackPanel>

            <Rectangle Height="1" Style="{DynamicResource SeparatorRectangleStyleKey}" Margin="0,15,0,10" />

            <TextBlock Text="{Binding TextResource.Tool_WindowsTheme_Title, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}" 
                        Margin="0,0,0,10"
				Style="{DynamicResource HeaderTextStyleKey}" />
            <TextBlock Text="{Binding TextResource.Tool_WindowsTheme_ThemeColor, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				Style="{DynamicResource HeaderTextStyleKey}" />
            <ListBox 
                ItemsSource="{Binding WindowThemeList.List}" 
                SelectedItem="{Binding WindowThemeList.SelectedItem,Mode=TwoWay}"
                Style="{DynamicResource ListBox_Theme}" />
            <TextBlock Text="{Binding TextResource.Tool_WindowsTheme_AccentColor, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				Style="{DynamicResource HeaderTextStyleKey}" />
            <ListBox 
                ItemsSource="{Binding WindowAccentList.List}" 
                SelectedItem="{Binding WindowAccentList.SelectedItem,Mode=TwoWay}"
                Style="{DynamicResource ListBox_Theme}" />

            <TextBlock Text="{Binding TextResource.Tool_WindowViewType_Title, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				Style="{DynamicResource HeaderTextStyleKey}" />
            <ListBox 
                ItemsSource="{Binding WindowViewTypeList.List}" 
                SelectedItem="{Binding WindowViewTypeList.SelectedItem,Mode=TwoWay}"
                Style="{DynamicResource ListBox_Theme}"
                ItemTemplate="{DynamicResource WindowViewType_Item}"/>

            <TextBlock Text="{Binding TextResource.Tool_EnableSimpleFleet_Title, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				Style="{DynamicResource HeaderTextStyleKey}" />
            <CheckBox Margin="10" HorizontalAlignment="Left"
				Content="{Binding TextResource.Tool_EnableSimpleFleet_CheckBox, Source={x:Static amingdata:ResourceService.Current},Mode=OneWay}"
				IsChecked="{Binding EnableSimpleFleet ,Mode=TwoWay}"/>
            
            <!--PluginInfo-->
            <TextBlock Style="{DynamicResource HeaderTextStyleKey}" 
                    FontSize="10" TextAlignment="Right" LineHeight="16"
                    Margin="0,40,5,0" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <Run Text="Developer:" />
			    <metro2:HyperlinkEx Uri="https://github.com/AMMing">
				    <Run Text="@AMing" />
			    </metro2:HyperlinkEx>
                <LineBreak/>
                <Run Text="Source Code:" />
			    <metro2:HyperlinkEx Uri="https://github.com/AMMing/KcvPlugins">
				    <Run Text="https://github.com/AMMing/KcvPlugins" />
			    </metro2:HyperlinkEx>
                <LineBreak/>
                <Run Text="{Binding PluginInfo}" />
            </TextBlock>
        </StackPanel>
    </Grid>
</UserControl>
